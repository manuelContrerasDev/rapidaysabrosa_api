generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =========================
// üè∑Ô∏è CATEGOR√çAS
// =========================
model categories {
  id          Int        @id @default(autoincrement())
  name        String     @unique @db.VarChar(100)
  description String?
  products    products[] // üîó Relaci√≥n con productos
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

// =========================
// üë§ CLIENTES
// =========================
model customers {
  id         Int      @id @default(autoincrement())
  full_name  String   @db.VarChar(150)
  phone      String?  @db.VarChar(20)
  email      String?  @db.VarChar(150)
  address    String?
  created_at DateTime @default(now())
  orders     orders[]
}

// =========================
// üßæ PEDIDOS
// =========================
model orders {
  id           Int      @id @default(autoincrement())
  customer_id  Int?
  total_amount Decimal  @db.Decimal(10, 2)
  status       String   @default("pendiente") @db.VarChar(50)
  created_at   DateTime @default(now())

  order_items order_items[]
  customers   customers?    @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  payments    payments[]
}

// =========================
// üß± ITEMS DEL PEDIDO
// =========================
model order_items {
  id         Int     @id @default(autoincrement())
  order_id   Int?
  product_id Int?
  quantity   Int
  subtotal   Decimal @db.Decimal(10, 2)

  orders   orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade)
  products products? @relation(fields: [product_id], references: [id], onDelete: NoAction)
}

// =========================
// üí≥ M√âTODOS DE PAGO
// =========================
model payment_methods {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(100)
  payments payments[]
}

// =========================
// üí∞ PAGOS
// =========================
model payments {
  id                Int       @id @default(autoincrement())
  order_id          Int?
  payment_method_id Int?
  amount            Decimal?  @db.Decimal(10, 2)
  payment_date      DateTime? @default(now())

  orders          orders?          @relation(fields: [order_id], references: [id], onDelete: Cascade)
  payment_methods payment_methods? @relation(fields: [payment_method_id], references: [id])
}

// =========================
// üçï PRODUCTOS
// =========================
model products {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(150)
  description  String?       @db.VarChar(500)
  price        Decimal       @db.Decimal(10, 2)
  image_url    String?       @db.VarChar(255)
  category_id  Int?
  available    Boolean       @default(true)
  discount     Decimal?      @db.Decimal(5, 2)
  isVegetarian Boolean       @default(false)
  is_promo     Boolean       @default(false)
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  order_items  order_items[]
  categories   categories?   @relation(fields: [category_id], references: [id])
}


// =========================
// üéÅ PROMOCIONES
// =========================
model promotions {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(150)
  description String?
  image_url   String?
  discount    String?   @db.VarChar(50)
  valid_until DateTime?
  is_active   Boolean   @default(true)
}

// =========================
// üßÆ LOGS DE PROMOCI√ìN
// =========================
model promo_logs {
  id         Int      @id @default(autoincrement())
  message    String   @db.VarChar(255)
  details    String?  @db.Text
  created_at DateTime @default(now())
}
